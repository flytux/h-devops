apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: update-gitops-cm
spec:
  params:
  #- name: argo-url
  - name: build-stage
  - name: gitops-revision
  - name: gitops-url
  - name: image-url
  - name: deploy-manifest
  - name: gitops-path
  #- name: argo-app-name
  - name: build-id
  - name: rollout-strategy
  - name: cm-name
    default: "cm-name"
  workspaces:
  - name: gitops
  stepTemplate:
  #  envFrom:
  #  - secretRef:
  #      name: argocd-env-secret
  #  env:
  #  - name: ARGOCD_SERVER
  #    value: $(params.argo-url)
     envFrom:
     - configMapRef:
         name: $(params.cm-name)

  steps:
  - name: git-checkout
    #image: alpine/git:v2.26.2
    image: tbd5d1uh.private-ncr.fin-ntruss.com/k8s/dev/devops/alpine/git:v2.26.2
    workingDir: "$(workspaces.gitops.path)"
    script: |
      #!/usr/bin/env sh
      #git init
      #git remote add origin $(params.gitops-url)
      #git fetch --depth 1 origin $(params.gitops-revision)
      #git checkout $(params.gitops-revision)
      rm -rf .git
      rm -rf *
      git clone -b $(params.gitops-revision) $(params.gitops-url) .
  - name: update-yaml
    #image: alpine/git:v2.26.2
    image: tbd5d1uh.private-ncr.fin-ntruss.com/k8s/dev/devops/alpine/git:v2.26.2
#    envFrom:
#    - configMapRef:
#        name: $(params.cm-name)
    workingDir: "$(workspaces.gitops.path)"
    script: |
      #!/usr/bin/env sh
      if [ "$(params.build-stage)" == "test" ] && [ "$status" == "pass" ]

      then
        set -e

        echo "updaing image to $(inputs.params.image-url):"$imagetag" & strategy to $(params.rollout-strategy)"
        sed -i "s|newTag:.*$|newTag: "$imagetag"|" $(params.gitops-path)/$(params.deploy-manifest)
        sed -i "s|../base/.*$|../base/$(params.rollout-strategy)|" $(params.gitops-path)/$(params.deploy-manifest)
        
      elif [ "$(params.build-stage)" == "test" ] && [ "$status" != "pass" ]
      
      then
        set -e
        echo "this image not approved yet or rejected"
        exit

      else
        set -e
        
        echo "updating image to $(inputs.params.image-url):$(inputs.params.build-id) & strategy to $(params.rollout-strategy)"
        sed -i "s|newTag:.*$|newTag: $(params.build-id)|" $(params.gitops-path)/$(params.deploy-manifest)
        sed -i "s|../base/.*$|../base/$(params.rollout-strategy)|" $(params.gitops-path)/$(params.deploy-manifest)

      fi
    
  - name: commit-push-changes-gitops
    #image: alpine/git:v2.26.2
    image: tbd5d1uh.private-ncr.fin-ntruss.com/k8s/dev/devops/alpine/git:v2.26.2
    workingDir: "$(workspaces.gitops.path)"
    script: |
      #!/usr/bin/env sh
      if [ "$(params.build-stage)" == "test" ] && [ "$status" == "pass" ]

      then
        set -e
        git config --global user.email "devops@herosonsa.co.kr"
        git config --global user.name "devops"
        git config --global http.postBuffer 524288000
        git add .
        git commit --allow-empty -m "[tekton] updating image to $image-tag & strategy to $(params.rollout-strategy) "
        git push origin $(params.gitops-revision)

      elif [ "$(params.build-stage)" == "test" ] && [ "$status" != "pass" ]

      then
        set -e
        echo "this image not approved yet or rejected"
        exit

      else
        set -e
        git config --global user.email "devops@herosonsa.co.kr"
        git config --global user.name "devops"
        git config --global http.postBuffer 524288000
        git add .
        git commit --allow-empty -m "[tekton] updating image to $(inputs.params.build-id) & strategy to $(params.rollout-strategy) "
        git push origin $(params.gitops-revision)
     
      fi
  #- name: wait-for-argocd-rollout
    #image: quay.io/argoproj/argocd:v2.4.8
  #  image: tbd5d1uh.private-ncr.fin-ntruss.com/k8s/dev/devops/argoproj/argocd:v2.4.8
  #  script: |
      #!/usr/bin/env sh
      #set -e
  #    argocd app sync $(inputs.params.argo-app-name) --insecure
      #exit 0
      #argocd app wait $(inputs.params.argo-app-name) --sync --health --operation --insecure

