---
apiVersion: v1
kind: Secret
metadata:
    name: docker-auth
    annotations:
      tekton.dev/docker-0: tbd5d1uh.private-ncr.fin-ntruss.com
type: kubernetes.io/basic-auth
stringData:
    username: "B8706A69B7E41CE978AB"
    password: "7C48BD41C67993AD8B693A6B335EFB6E27921AA4"
---
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-auth
  annotations:
    tekton.dev/git-0: https://gitlab.herosonsa.co.kr
type: kubernetes.io/basic-auth
stringData:
  username: devops
  password: "Hero12!@"
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    tekton.dev/git-1: https://hello-3031818.devtools.fin-ncloud.com
  name: source-commit-auth
type: kubernetes.io/basic-auth
data:
  password: SGVyb3NvbnNhMTIhQA==
  username: ZGV2b3BzQGhlcm9zb25zYS5jby5rcg==
---
apiVersion: v1
kind: ServiceAccount
metadata:
    name: sa-pipeline-runner
secrets:
    - name: docker-auth
    - name: gitlab-auth
    - name: source-commit-auth
imagePullSecrets:
  - name: hero-reg
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-pipeline-trigger
secrets:
  - name: kube-api-secret
  - name: docker-auth

---

apiVersion: v1
kind: Secret
metadata:
  name: kube-api-secret
  annotations:
    kubernetes.io/service-account.name: sa-pipeline-trigger
type: kubernetes.io/service-account-token
---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: devops-pipelines
  name: role-pipeline-trigger
rules:
  # Permissions for every EventListener deployment to function
  - apiGroups: ["triggers.tekton.dev"]
    resources: ["eventlisteners", "triggers", "triggerbindings", "triggertemplates", "clustertriggerbindings", "clusterinterceptors"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps", "secrets"] # secrets are only needed for Github/Gitlab interceptors
    verbs: ["get", "list", "watch"]
  # Permissions to create resources in associated TriggerTemplates
  - apiGroups: ["tekton.dev"]
    resources: ["pipelineruns", "pipelineresources", "taskruns"]
    verbs: ["create"]
  # Permisnions to create EL pods
  - apiGroups: ["extensions", "apps", ""]
    resources: ["services", "deployments", "pods"]
    verbs: ["get", "create", "update", "patch", "list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: role-bidning-pipeline-trigger
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: role-pipeline-trigger
subjects:
  - kind: ServiceAccount
    name: sa-pipeline-trigger
    namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: triggers--eventlistener-binding
subjects:
- kind: ServiceAccount
  name: sa-pipeline-trigger
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-roles
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: triggers-eventlistener-clusterbinding
subjects:
- kind: ServiceAccount
  name: sa-pipeline-trigger
  namespace: devops-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-clusterroles
